# Default to info level output; this is very handy if you eventually use Hibernate as well.
log4j.rootCategory=INFO, CONSOLE

# It seems there is a lot of troubles with Centos 7, you must :
# * replace "INFO, CONSOLE" by "INFO, LINSHARE"
# * replace the env variable by the full path in the config key log4j.appender.LINSHARE.File bellow.

# In order to use an external configuration file for log4j, use this key for JAVA_OPS
# JAVA_OPTS="${JAVA_OPTS} -Dlog4j.configuration=file:/etc/linshare/log4j.properties"

# To modify log levels at runtime you could use REST API or JMX.
# an embedded JMX term is available inside LinShare WAR : linshare/WEB-INF/lib/jmxterm-1.0-alpha-4-uber.jar
# You can launch it using the following command: java -jar jmxterm-1.0-alpha-4-uber.jar
# Example :
# First you have to look for the LinShare java process, open a connection, displays all LinShare beans
# Then select the wanted JMX bean, display current value and  update it.
# $> jvms
# $> open <pid>
# $> domain LinshareJMXBeans
# $> bean LinshareJMXBeans:name=LinshareLoggers
# $> info
# $> run level org.linagora.linshare
# $> run level org.linagora.linshare INFO

# Define all the appenders
log4j.appender.LINSHARE=org.apache.log4j.DailyRollingFileAppender
log4j.appender.LINSHARE.File=/var/log/tomcat8/linshare.log
log4j.appender.LINSHARE.Append=true
log4j.appender.LINSHARE.Encoding=UTF-8
# Roll-over the log once per day
log4j.appender.LINSHARE.DatePattern='.'yyyy-MM-dd'.log'
log4j.appender.LINSHARE.layout = org.apache.log4j.PatternLayout
#log4j.appender.LINSHARE.layout.ConversionPattern = %d [%t] %-5p %c- %m%n
log4j.appender.LINSHARE.layout.ConversionPattern=[%p]:%t:%d{yyyyMMdd.HHmmss}:%c:%M:%m%n


# CONSOLE is set to be a ConsoleAppender.
log4j.appender.CONSOLE=org.apache.log4j.ConsoleAppender
# CONSOLE uses PatternLayout.
log4j.appender.CONSOLE.layout=org.apache.log4j.PatternLayout
log4j.appender.CONSOLE.layout.ConversionPattern=[%p]:%t:%d{yyyyMMdd.HHmmss}:%c:%M:%m%n


# Disable info message "[INFO]:AbstractContextSource:afterPropertiesSet:Property 'userDn' not set - anonymous context will be used for read-write operations"
log4j.category.org.springframework.ldap.core.support.AbstractContextSource=warn

# Disable warn message : [WARN] org.hibernate.engine.StatefulPersistenceContext.ProxyWarnLog:narrowProxy:
#								Narrowing proxy to class org.linagora.linshare.core.domain.entities.LdapUserProvider - this operation breaks ==
# v1
log4j.category.org.hibernate.engine.StatefulPersistenceContext.ProxyWarnLog=ERROR
# v2
log4j.category.org.hibernate.engine.internal.StatefulPersistenceContext=ERROR

### advance debug configuration

## Authentication stack
# log4j.category.org.springframework.security=info
# ldap query (only bind)
# log4j.category.org.springframework.security.ldap=info

## Hibernate, queries and transactions.
#log4j.logger.org.springframework.transaction=DEBUG
#log4j.logger.org.springframework.orm.hibernate3.HibernateTransactionManager=DEBUG
# log4j.logger.org.hibernate.SQL=debug
## Logs the JDBC parameters passed to a query
#log4j.logger.org.hibernate.type=trace


### advanced debug configuration
#log4j.logger.org.jclouds=debug

## LDAP bindings debug (for users or groups)
# log4j.category.org.linagora.linshare.ldap=trace

## Show query with MongoRepository and Spring Data.
# log4j.category.org.springframework.data.mongodb.core.MongoTemplate=DEBUG

log4j.category.org.linagora.linshare=info
log4j.category.org.jclouds=info

# Log exceptions stacktrace
# log4j.logger.org.linagora.linshare.webservice.interceptor=DEBUG
