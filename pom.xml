<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.linagora.linshare</groupId>
	<artifactId>linshare-core</artifactId>
	<version>6.1.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>LinShare, Secure File Sharing</name>
	<description>Specially designed to secure paperless trading companies that put privacy and traceability in the heart of their problems of exchange, Linshare provides a simple solution completely intuitive :

        * Linshare allows employees to upload files into their space
        * Linshare can share files with internal or external collaborators
        * Linshare offers several features to securely exchange
        * User&amp;share allows Linshare to communicate with the fat client
	</description>
	<url>https://github.com/linagora/linshare</url>
	<inceptionYear>2008</inceptionYear>
	<issueManagement>
		<system>LinShare GitHub</system>
		<url>https://github.com/linagora/linshare/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://jenkins.linshare.org/jenkins/</url>
	</ciManagement>

	<scm>
		<connection>scm:git:git://github.com/linagora/linshare-core.git</connection>
		<developerConnection>scm:git:ssh://git@ci.linagora.com:7999/linagora/lgs/linshare/products/linshare-core.git</developerConnection>
		<tag>HEAD</tag>
		<url>http://github.com/linagora/linshare-core/tree/master/</url>
	</scm>

	<organization>
		<name>LINAGORA</name>
		<url>http://www.linagora.com/</url>
	</organization>
	<developers>
		<developer>
			<id>fmartin</id>
			<name>Frederic Martin</name>
			<email>fmartin@linagora.com</email>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Product Owner</role>
			</roles>
		</developer>
		<developer>
			<id>ysebahi</id>
			<name>Yazid SEBAHI</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>mjebahi</id>
			<name>Marwan JEBAHI</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>fbordjah</id>
			<name>Fay√ßal BORDJAH</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>akone</id>
			<name>Alioune Badara Kone</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>asall</id>
			<name>Alpha Sall</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>asiba</id>
			<name>Anais Siba</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>aduprat</id>
			<name>Antoine Duprat</name>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU AFFERO GENERAL PUBLIC LICENSE</name>
			<url>https://github.com/linagora/linshare/blob/master/COPYING.md</url>
		</license>
	</licenses>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-framework-bom</artifactId>
				<version>5.3.22</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>com.thoughtworks.xstream</groupId>
				<artifactId>xstream</artifactId>
				<version>1.4.18</version>
			</dependency>
			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty</artifactId>
				<version>3.10.6.Final</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests) will fail, preventing Maven
			from packaging the WAR. Tapestry includes a large number of testing facilities designed for use with TestNG (http://testng.org/), so
			it's recommended. -->

		<dependency>
		    <groupId>javax.xml.ws</groupId>
		    <artifactId>jaxws-api</artifactId>
		    <version>2.3.1</version>
		</dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>org.hibernate.validator</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.9.2</version>
		</dependency>

		<!-- Quartz framework -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.2</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring dependencies -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- spring-context-support dependency is required with Quartz integration -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Transaction dependency is required with Quartz integration -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- spring - begin -->
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
			<version>2.4.1</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring - end -->

		<!-- spring security - begin -->
		<!-- dependencies :
		- spring-security-web
		- spring-security-core
		- spring-security-config
		- spring-security-ldap
		- spring-security-acl
		 -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security-release-version}
			</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security-release-version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-client</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-jose</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-oauth2-resource-server</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.nimbusds</groupId>
			<artifactId>oauth2-oidc-sdk</artifactId>
			<version>9.41</version>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-test</artifactId>
			<version>${spring-security-release-version}</version>
			<scope>test</scope>
		</dependency>
		<!-- spring security - end -->

		<dependency>
			<groupId>org.jboss.aerogear</groupId>
			<artifactId>aerogear-otp-java</artifactId>
			<version>1.0.0</version>
		</dependency>

		<!-- spring data - begin -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
			<version>${spring-data.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mongodb</groupId>
			<artifactId>mongodb-driver-sync</artifactId>
			<version>${spring-data.driver.version}</version>
		</dependency>

		<!-- spring data - end -->

		<!--  LDAP Query Language integration - begin -->
		<dependency>
			<groupId>org.linid.dm</groupId>
			<artifactId>authorization</artifactId>
			<version>${linid.authorization.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.linid.dm</groupId>
					<artifactId>core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.linid.dm</groupId>
            <artifactId>core</artifactId>
			<version>${linid.authorization.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- override org.linid.dm.authorization dependency requirement - security issue. -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>1.9.4</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.mozilla</groupId>
			<artifactId>rhino</artifactId>
			<version>${mozilla.rhino.version}</version>
			<type>jar</type>
			<optional>false</optional>
		</dependency>
		<!--  LQL integration - end -->

		<!-- SL4J: Logger API and choose LOG4J implementation -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${log4j-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-slf4j-impl</artifactId>
			<version>${log4j-release-version}</version>
		</dependency>

		<!-- bridge logs from commons loggings to slf4j -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.3</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>

		<!-- Mime type detection tools. -->
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.28.2</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.xml.bind</groupId>
					<artifactId>jaxb-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.sun.xml.bind</groupId>
					<artifactId>jaxb-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.glassfish.jaxb</groupId>
					<artifactId>jaxb-runtime</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>pdfbox</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>xmpbox</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>preflight</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>jempbox</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>jbig2-imageio</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.apache.pdfbox</groupId>
					<artifactId>pdfbox-tools</artifactId>
				</exclusion>
				<exclusion>
					<groupId>com.beust</groupId>
					<artifactId>jcommander</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>2.11.0</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-jpeg2000</artifactId>
			<version>1.4.0</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.8.9</version>
		</dependency>
		<dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-allblobstore</artifactId>
			<version>${jclouds.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-sshj</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-ext-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-slf4j</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-enterprise</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-ext-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.api</groupId>
			<artifactId>filesystem</artifactId>
			<version>${jclouds.version}</version>
		</dependency>

		<!--  for aspectj pointcut (ie transactions) -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.6</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>net.taldius</groupId>
			<artifactId>libclamav</artifactId>
			<version>1.0</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>javax.annotations</groupId> -->
<!-- 			<artifactId>jsr250-api</artifactId> -->
<!-- 			<version>1.0</version> -->
<!-- 		</dependency> -->


		<!-- Test dependencies - begin -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.9.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.9.0</version>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-inline</artifactId>
			<version>3.12.4</version>
			<scope>test</scope>
		</dependency>
<!-- 		Mockito Extension -->
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<version>3.12.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp</artifactId>
			<version>3.1.7</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>de.bwaldvogel</groupId>
			<artifactId>mongo-java-server</artifactId>
			<version>${mongo.java.server}</version>
			<scope>test</scope>
		</dependency>
		<!-- Test dependencies - end -->

		<!-- timestamping bouncycastle last release : timestaping and ciphering-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.bouncycastle</groupId> -->
<!-- 			<artifactId>bctsp-jdk16</artifactId> -->
<!-- 			<version>1.46</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.bouncycastle</groupId> -->
<!-- 			<artifactId>bcprov-jdk16</artifactId> -->
<!-- 			<version>1.46</version> -->
<!-- 		</dependency> -->

		<!-- Database related dependencies - begin -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${sql.driver.postgresql}</version>
		</dependency>
		<!--  db connection pool -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- Database related dependencies - begin -->

		<!-- XSS filter -->
		<!-- https://mvnrepository.com/artifact/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer -->
		<dependency>
			<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
			<artifactId>owasp-java-html-sanitizer</artifactId>
			<version>20191001.1</version>
		</dependency>

		<!-- ###### web services ####### -->
		<!-- cxf rest jaxrs -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<!-- cxf -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-service-description-openapi-v3</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-features-logging</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.webjars</groupId>
			<artifactId>swagger-ui</artifactId>
			<version>${cxf.swagger.ui.version}</version>
		</dependency>
		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<dependency>
			<groupId>org.reflections</groupId>
			<artifactId>reflections</artifactId>
			<version>0.10.1</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-api</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-impl</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt-jackson</artifactId>
			<version>${jjwt.version}</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>com.unboundid</groupId>
			<artifactId>unboundid-ldapsdk</artifactId>
			<version>5.1.4</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.passay</groupId>
			<artifactId>passay</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>3.23.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>nl.jqno.equalsverifier</groupId>
			<artifactId>equalsverifier</artifactId>
			<version>3.10.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>okhttp</artifactId>
			<version>4.10.0</version>
		</dependency>
		<dependency>
			<groupId>com.squareup.okhttp3</groupId>
			<artifactId>mockwebserver</artifactId>
			<version>4.10.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<finalName>linshare-core</finalName>

			<!-- Change licence -->
			<!-- To update the license run mvn license:format -->
			<plugins>
				<plugin>
					<groupId>com.mycila</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>4.1</version>
					<configuration>
						<properties>
							<owner>Anton Shepilov</owner>
							<email>ashepilov@linagora.com</email>
						</properties>
						<licenseSets>
							<licenseSet>
								<header>LICENSE_INLINE</header>
								<excludes>
									<exclude>**/*.yml</exclude>
									<exclude>**/*.xml</exclude>
									<exclude>**/*.properties</exclude>
									<exclude>**/README</exclude>
									<exclude>src/test/resources/**</exclude>
									<exclude>src/main/resources/**</exclude>
								</excludes>
							</licenseSet>
						</licenseSets>
					</configuration>
				</plugin>

			<!-- maven-compiler-plugin -->
			<plugin>
				<!-- https://github.com/openapi-tools/swagger-maven-plugin -->
				<groupId>io.openapitools.swagger</groupId>
				<artifactId>swagger-maven-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<id>admin v5</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.adminv5</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.adminv5.impl</resourcePackage>
								<resourcePackage>org.linagora.linshare.core.facade.webservice.adminv5.dto</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-admin-v5</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Admin v5 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>admin v4</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.adminv4</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.adminv4.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-admin-v4</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Admin v4 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>admin v1</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.admin</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.admin.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-admin-v1</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Admin v1 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>user v2</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.userv2</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2.impl</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2.impl.only</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-user-v2</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>User v2 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>user v4</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.userv4</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv4.impl</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-user-v4</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>User v4 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>user v5</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.userv5</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv5.impl</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.userv2.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-user-v5</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>User v5 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>delegation v2</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.delegationv2</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.delegationv2.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-delegation-v2</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Delegation v2 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>external</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.external</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.external.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-external</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>External (anonymous) API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>upload request v4</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.uploadrequestv4</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.uploadrequestv4.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-upload-request-v4</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Upload Request v4 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
					<execution>
						<id>upload request v5</id>
						<configuration>
							<attachSwaggerArtifact>true</attachSwaggerArtifact>
							<resourcePackages>
								<resourcePackage>org.linagora.linshare.webservice.uploadrequestv5</resourcePackage>
								<resourcePackage>org.linagora.linshare.webservice.uploadrequestv5.impl</resourcePackage>
							</resourcePackages>
							<outputDirectory>${basedir}/target/swagger/</outputDirectory>
							<outputFilename>swagger-upload-request-v5</outputFilename>
							<outputFormats>
								<outputFormat>JSON</outputFormat>
								<outputFormat>YAML</outputFormat>
							</outputFormats>
							<prettyPrint>true</prettyPrint>
							<swaggerConfig>
								<info>
									<title>Upload Request v5 API</title>
									<version>${project.version}</version>
									<contact>
										<name>LINAGORA/LinShare</name>
										<url>https://github.com/linagora/linshare</url>
									</contact>
									<license>
										<url>http://download.linshare.org/LinShare-License_AfferoGPL-v3_en.pdf</url>
										<name>Affero GPL v3</name>
									</license>
								</info>
							</swaggerConfig>
						</configuration>
						<goals>
							<goal>generate</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.8.0</version>
				<configuration>
					<source>11</source>
					<target>11</target>
					<optimize>true</optimize>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.8</version><!--$NO-MVN-MAN-VER$-->
				<executions>
					<execution>
						<phase>process-resources</phase>
						<id>ant-merge-files-import-postgres</id>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target>
								<mkdir dir="target/classes/sql/postgresql/" />
								<concat destfile="target/classes/sql/postgresql/import-postgresql.sql">
									<fileset file="src/main/resources/sql/common/import-header.sql" />
									<fileset file="src/main/resources/sql/common/import-domains.sql" />
									<fileset file="src/main/resources/sql/common/import-quota.sql" />
									<fileset file="src/main/resources/sql/common/import-welcome-messages.sql" />
									<fileset file="src/main/resources/sql/common/import-functionalities.sql" />
									<fileset file="src/main/resources/sql/common/import-mail-activation.sql" />
									<fileset file="src/main/resources/sql/common/import_mail_structure.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
									<fileset file="src/main/resources/sql/common/import-settings.sql" />
									<fileset file="src/main/resources/sql/common/import-footer.sql" />
								</concat>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ant-merge-files-mail-templates</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="target/classes/sql/postgresql/" />
								<concat destfile="target/classes/sql/postgresql/import-all-emails.sql">
									<fileset file="src/main/resources/sql/common/import-header.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
									<fileset file="src/main/resources/sql/common/import-footer.sql" />
								</concat>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ant-merge-files-mail-templates-h2</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>generate-test-sources</phase>
						<configuration>
							<target>
								<mkdir dir="target/classes/sql/h2/" />
								<concat destfile="target/classes/sql/h2/import-all-emails.sql">
									<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
								</concat>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ant-merge-files-mail-templates-for-reset-mails</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="target/classes/sql/postgresql/" />
								<concat destfile="target/classes/sql/postgresql/reset-default-emails-config.sql">
									<fileset file="src/main/resources/sql/common/import-reset-default-emails-configuration-header.sql" />
									<fileset file="src/main/resources/sql/common/import_mail_structure.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
									<fileset file="src/main/resources/sql/common/import-reset-default-emails-configuration-footer.sql" />
								</concat>
							</target>
						</configuration>
					</execution>
					<execution>
						<id>ant-merge-files-mail-templates-for-update-mails</id>
						<goals>
							<goal>run</goal>
						</goals>
						<phase>process-resources</phase>
						<configuration>
							<target>
								<mkdir dir="target/classes/sql/postgresql/" />
								<concat destfile="target/classes/sql/postgresql/update-default-emails-config.sql">
									<fileset file="src/main/resources/sql/common/import-update-default-emails-configuration-header.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
									<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
									<fileset file="src/main/resources/sql/common/import-update-default-emails-configuration-footer.sql" />
								</concat>
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- buildnumber-maven-plugin (compute timestamp, build number, ...)-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--  It will first check to see if you have locally modified files, and will fail if there are any.  -->
					<!-- -Dmaven.buildNumber.doCheck=true -->
					<doCheck>false</doCheck>
					<!-- Update your local repository -->
					<!-- -Dmaven.buildNumber.doUpdate=true -->
					<doUpdate>false</doUpdate>
					<buildNumberPropertyName>sources.version</buildNumberPropertyName>
					<timestampPropertyName>build.timestamp</timestampPropertyName>
					<timestampFormat>{0,date,yyyy-MM-dd HH:mm}</timestampFormat>
				</configuration>
			</plugin>

			<!-- maven-war-plugin (packaging) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${sources.version} ${build.timestamp}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- maven-assembly-plugin for sql files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<appendAssemblyId>true</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>sql</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/sql.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
					<execution>
						<id>documentation-webservices</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/documentation-webservices.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- maven-scm-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9.4</version>
			</plugin>
			<!-- maven-release-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version><!--$NO-MVN-MAN-VER$-->
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<!--During release:perform, enable the "release" profile -->
					<!-- <releaseProfiles>release</releaseProfiles> -->
				</configuration>
			</plugin>
			<!-- maven-install-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- maven-deploy-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
					<skip>false</skip>
				</configuration>
			</plugin>
			<!-- Maven Jetty Plugin 9.x : run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.18.v20190429</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/linshare</contextPath>
					</webApp>
					<!-- -Djetty.port=8080 -->
					<httpConnector>
						<port>8080</port>
					</httpConnector>
				</configuration>
				<!--  not supported yet
				<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
					This doesn't do anything for Jetty, but is a workaround for a Maven
						bug that prevents the requestLog from being set.
					<append>true</append>
				</requestLog>
				-->
			</plugin>
			<!-- cobertura (test coverage) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<instrumentation>
						<ignores>
							<ignore>org.linagora.*Test*</ignore>
						</ignores>
						<excludes>
							<exclude>**/*Test.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<!-- maven-surefire-plugin (test reports) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>3.0.0-M3</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>3.1.1</version>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<id>enforce-banned-dependencies</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<bannedDependencies>
									<excludes>
										<exclude>log4j:log4j</exclude>
										<exclude>org.slf4j:slf4j-log4j12</exclude>
									</excludes>
								</bannedDependencies>
							</rules>
							<fail>true</fail>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- mvn versions:display-dependency-updates -D allowMajorUpdates=false -DallowAnyUpdates=false -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
				<version>2.11.0</version>
				<configuration>
					<rulesUri>file:///${project.basedir}/src/dependencies/rules.xml</rulesUri>
				</configuration>
				<executions>
					<execution>
						<phase>compile</phase>
						<goals>
							<goal>display-dependency-updates</goal>
							<goal>display-plugin-updates</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>version.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>version.properties</include>
					<include>openapi-configuration-*.json</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/test/resources/sample-files</directory>
			</testResource>
			<testResource>
				<directory>src/mongo-java-server/resources</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.zcore.maven
										</groupId>
										<artifactId>
											merge-maven-plugin
										</artifactId>
										<versionRange>
											[0.0.3,)
										</versionRange>
										<goals>
											<goal>merge</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>org.apache.maven.plugins</groupId>
										<artifactId>maven-antrun-plugin</artifactId>
										<versionRange>[1.7,)</versionRange>
										<goals>
											<goal>run</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<reporting>
		<!-- Adds a report detailing the components, mixins and base classes defined by this module. -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.0.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
			</plugin>
			<!-- it does not seem to work <plugin> <groupId>org.apache.tapestry</groupId> <artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version> <configuration> <rootPackage>org.linagora.linshare.view.tapestry</rootPackage> </configuration>
				</plugin> -->
		</plugins>
	</reporting>
	<profiles>
		<!--  profile:id=default -->
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!--  profile:id=dev -->
		<profile>
			<id>dev</id>
			<build>
				<finalName>linshare-core-${project.version}-${maven.build.timestamp}-${sources.version}</finalName>
			</build>
			<properties>
				<project.version>${project.version}-${maven.build.timestamp}-${sources.version}</project.version>
			</properties>
		</profile>

		<!--  profile:id=load-integration-context -->
		<profile>
			<id>load-integration-context</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<target name="copySql">
										<copy file="${basedir}/src/test/resources/DISABLED-springContext-datasource-integration.xml" tofile="${project.build.outputDirectory}/springContext-datasource.xml" overwrite="true" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=mongo-java-server -->
		<!--  to-be-tested -->
		<profile>
			<id>mongo-java-server</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<target name="copy-mongo-java-server">
										<copy todir="${project.build.outputDirectory}/" overwrite="true" flatten="true">
											<fileset dir="src/mongo-java-server/resources" />
										</copy>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>de.bwaldvogel</groupId>
					<artifactId>mongo-java-server</artifactId>
					<version>${mongo.java.server}</version>
				</dependency>
				<dependency>
					<groupId>org.springframework.data</groupId>
					<artifactId>spring-data-mongodb</artifactId>
					<version>${spring-data.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=h2 -->
		<profile>
			<id>h2</id>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=local -->
		<profile>
			<id>local</id>
			<activation>
				<property>
					<name>target</name>
					<value>local</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/subethamail/resources</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<inherited>false</inherited>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/subethamail/java</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.subethamail</groupId>
					<artifactId>subethasmtp</artifactId>
					<version>3.1.7</version>
					<exclusions>
						<exclusion>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-simple</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>update-version</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>parse-version</id>
								<goals>
									<goal>parse-version</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>com.google.code.maven-replacer-plugin</groupId>
						<artifactId>replacer</artifactId>
						<version>1.5.3</version>
						<executions>
							<execution>
								<id>import-settings.sql</id>
								<phase>validate</phase>
								<goals>
									<goal>replace</goal>
								</goals>
								<configuration>
									<file>src/main/resources/sql/common/import-settings.sql</file>
									<replacements>
										<replacement>
											<token>'[0-9]\.[0-9]\.[0-9]'</token>
											<value>'${parsedVersion.majorVersion}.${parsedVersion.minorVersion}.${parsedVersion.incrementalVersion}'</value>
										</replacement>
									</replacements>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

	</profiles>

	<repositories>
		<repository>
			<id>Linagora-LinShare-Repositories</id>
			<url>https://nexus.linagora.com/content/groups/linshare</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>Linagora-LinShare-Releases</id>
			<name>Linagora LinShare Releases</name>
			<url>https://nexus.linagora.com/content/repositories/linshare-releases</url>
		</repository>
		<snapshotRepository>
			<id>Linagora-LinShare-Snapshots</id>
			<name>Linagora LinShare Snapshots</name>
			<url>https://nexus.linagora.com/content/repositories/linshare-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<apache-directory-server.version>1.5.5</apache-directory-server.version>
		<cxf.version>3.4.4</cxf.version>
		<!-- We can not yet upgrade from 3.4.4 to 3.5.3 because there is an unexpected NPE during file uploads -->
		<cxf.swagger.ui.version>3.52.5</cxf.swagger.ui.version>
		<guava.version>30.1.1-jre</guava.version>
		<h2.version>1.4.200</h2.version>
		<hibernate.version>5.4.30.Final</hibernate.version>
		<jackson.version>2.13.0</jackson.version>
		<hibernate.validator.version>6.2.0.Final</hibernate.validator.version>
		<jclouds.version>2.5.0</jclouds.version>
		<jjwt.version>0.11.2</jjwt.version>
		<linid.authorization.version>2.1.2</linid.authorization.version>
		<maven.build.timestamp.format>yyyy.MM.dd-HH.mm.ss</maven.build.timestamp.format>
		<mongo.java.server>1.40.0</mongo.java.server>
		<mozilla.rhino.version>1.7.13</mozilla.rhino.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet.context.version>3.0.1</servlet.context.version>
		<slf4j-release-version>1.7.32</slf4j-release-version>
		<log4j-release-version>2.18.0</log4j-release-version>
		<spring-security-release-version>5.7.2</spring-security-release-version>
		<spring-data.version>3.3.6</spring-data.version>
		<spring-data.driver.version>4.4.2</spring-data.driver.version>
		<sql.driver.postgresql>42.4.1</sql.driver.postgresql>
		<thymeleaf.version>3.0.15.RELEASE</thymeleaf.version>
	</properties>
</project>
