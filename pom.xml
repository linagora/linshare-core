<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.linagora.linshare</groupId>
	<artifactId>linshare-core</artifactId>
	<version>2.3.7-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>LinShare, Secure File Sharing</name>
	<description>Specially designed to secure paperless trading companies that put privacy and traceability in the heart of their problems of exchange, Linshare provides a simple solution completely intuitive :

        * Linshare allows employees to upload files into their space
        * Linshare can share files with internal or external collaborators
        * Linshare offers several features to securely exchange
        * User&amp;share allows Linshare to communicate with the fat client
	</description>
	<url>https://forge.linshare.org/projects/show/linshare</url>
	<inceptionYear>2008</inceptionYear>
	<issueManagement>
		<system>LinShare Redmine Bugtracker</system>
		<url>https://forge.linshare.org/projects/linshare/issues</url>
	</issueManagement>
	<ciManagement>
		<system>Jenkins</system>
		<url>https://jenkins.linshare.org/jenkins/</url>
	</ciManagement>

	<scm>
		<connection>scm:git:git://github.com/linagora/linshare-core.git</connection>
        <developerConnection>scm:git:ssh://git@ci.linagora.com:7999/linagora/lgs/linshare/products/linshare-core.git</developerConnection>
		<tag>HEAD</tag>
		<url>http://github.com/linagora/linshare-core/tree/master/</url>
	</scm>

	<organization>
		<name>LINAGORA</name>
		<url>http://www.linagora.com/</url>
	</organization>
	<developers>
		<developer>
			<id>fmartin</id>
			<name>Frederic Martin</name>
			<email>fmartin@linagora.com</email>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Product Owner</role>
			</roles>
		</developer>
		<developer>
			<id>akone</id>
			<name>Alioune Badara Kone</name>
			<email>akone@linagora.com</email>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>asall</id>
			<name>Alpha Sall</name>
			<email>asall@linagora.com</email>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
		<developer>
			<id>asiba</id>
			<name>Anais Siba</name>
			<email>asiba@linagora.com</email>
			<organization>LINAGORA</organization>
			<organizationUrl>http://www.linagora.com/</organizationUrl>
			<roles>
				<role>Developer</role>
			</roles>
		</developer>
	</developers>
	<licenses>
		<license>
			<name>GNU AFFERO GENERAL PUBLIC LICENSE</name>
			<url>http://www.fsf.org/licensing/licenses/agpl-3.0.html</url>
		</license>
	</licenses>

	<dependencyManagement>
		<dependencies>
<!-- 			TODO: To be use -->
<!-- 			<dependency> -->
<!-- 				<groupId>org.springframework</groupId> -->
<!-- 				<artifactId>spring-framework-bom</artifactId> -->
<!-- 				<version>${spring.version}</version> -->
<!-- 				<scope>import</scope> -->
<!-- 				<type>pom</type> -->
<!-- 			</dependency> -->
			<dependency>
				<groupId>org.springframework.data</groupId>
				<artifactId>spring-data-releasetrain</artifactId>
				<version>${spring-data.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>3.6.4</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<!-- A dependency on either JUnit or TestNG is required, or the surefire plugin (which runs the tests) will fail, preventing Maven
			from packaging the WAR. Tapestry includes a large number of testing facilities designed for use with TestNG (http://testng.org/), so
			it's recommended. -->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<version>${h2.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-entitymanager</artifactId>
			<version>${hibernate.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-ehcache</artifactId>
			<version>${hibernate.version}</version>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>2.10.6</version>
		</dependency>

		<!-- Quartz framework -->
		<dependency>
			<groupId>org.quartz-scheduler</groupId>
			<artifactId>quartz</artifactId>
			<version>2.3.0</version>
			<exclusions>
				<exclusion>
					<artifactId>commons-logging</artifactId>
					<groupId>commons-logging</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Spring dependencies -->

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-orm</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- spring-context-support dependency is required with Quartz integration -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context-support</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- Transaction dependency is required with Quartz integration -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring-release-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- spring - begin -->
		<dependency>
			<groupId>org.springframework.ldap</groupId>
			<artifactId>spring-ldap-core</artifactId>
			<version>2.3.2.RELEASE</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring - end -->

		<!-- spring security - begin -->
		<!-- dependencies :
		- spring-security-web
		- spring-security-core
		- spring-security-config
		- spring-security-ldap
		- spring-security-acl
		 -->
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring-security-release-version}
			</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-ldap</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-acl</artifactId>
			<version>${spring-security-release-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring-security-release-version}</version>
			<scope>runtime</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- spring security - end -->

		<!-- spring data - begin -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-mongodb</artifactId>
		</dependency>
		<!-- spring data - end -->

		<!--  LDAP Query Language integration - begin -->
		<dependency>
			<groupId>org.linid.dm</groupId>
			<artifactId>authorization</artifactId>
			<version>${linid.authorization.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.linid.dm</groupId>
					<artifactId>core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.linid.dm</groupId>
            <artifactId>core</artifactId>
			<version>${linid.authorization.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.mozilla</groupId>
			<artifactId>rhino</artifactId>
			<version>${mozilla.rhino.version}</version>
			<type>jar</type>
			<optional>false</optional>
		</dependency>
		<!--  LQL integration - end -->

		<!-- SL4J: Logger API and choose LOG4J implementation -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>
		
		<!-- bridge logs from commons loggings to slf4j -->
		<dependency>
			<groupId>commons-logging</groupId>
			<artifactId>commons-logging</artifactId>
			<version>1.1.1</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j-release-version}</version>
		</dependency>

		<!-- Mime type detection tools. -->
		<dependency>
			<groupId>org.semanticdesktop</groupId>
			<artifactId>rdf2go.api</artifactId>
			<version>4.6.2</version>
		</dependency>
		<dependency>
			<groupId>org.semanticdesktop</groupId>
			<artifactId>aperture</artifactId>
			<version>1.2.0</version>
		</dependency>
		<dependency>
			<groupId>org.apache.tika</groupId>
			<artifactId>tika-parsers</artifactId>
			<version>1.20</version>
		</dependency>
		<dependency>
			<groupId>com.github.jai-imageio</groupId>
			<artifactId>jai-imageio-jpeg2000</artifactId>
			<version>1.3.0</version>
		</dependency>
		<dependency>
			<groupId>org.xerial</groupId>
			<artifactId>sqlite-jdbc</artifactId>
			<version>3.25.2</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>2.6.1</version>
		</dependency>
		<!-- Update xerces, necessary for apache tika 1.14 -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
			<version>2.12.1</version>
		</dependency>
		<!-- Force dependency to jembox as it is no more provided by pdfbox 2.0 -->
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>jempbox</artifactId>
			<version>1.8.14</version>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds</groupId>
			<artifactId>jclouds-allblobstore</artifactId>
			<version>${jclouds.version}</version>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-sshj</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-ext-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-slf4j</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.driver</groupId>
			<artifactId>jclouds-enterprise</artifactId>
			<version>${jclouds.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.bouncycastle</groupId>
					<artifactId>bcprov-ext-jdk15on</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.apache.jclouds.api</groupId>
			<artifactId>filesystem</artifactId>
			<version>${jclouds.version}</version>
		</dependency>

		<!--  for aspectj pointcut (ie transactions) -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjweaver</artifactId>
			<version>1.9.1</version>
		</dependency>

		<dependency>
			<groupId>javax.mail</groupId>
			<artifactId>mail</artifactId>
			<version>1.4.7</version>
		</dependency>
		<dependency>
			<groupId>net.taldius</groupId>
			<artifactId>libclamav</artifactId>
			<version>1.0</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
<!-- 		<dependency> -->
<!-- 			<groupId>javax.annotations</groupId> -->
<!-- 			<artifactId>jsr250-api</artifactId> -->
<!-- 			<version>1.0</version> -->
<!-- 		</dependency> -->


		<!-- Test dependencies - begin -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-api</artifactId>
			<version>5.4.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>5.4.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-commons</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.junit.platform</groupId>
			<artifactId>junit-platform-launcher</artifactId>
			<version>1.4.2</version>
		</dependency>
		<dependency>
			<groupId>org.opentest4j</groupId>
			<artifactId>opentest4j</artifactId>
			<version>1.1.1</version>
		</dependency>
		<dependency>
			<groupId>org.apiguardian</groupId>
			<artifactId>apiguardian-api</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>
		<!-- Junit Vintage : Used for JUnit 4 compatibility -->
		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
			<version>5.3.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.subethamail</groupId>
			<artifactId>subethasmtp</artifactId>
			<version>3.1.7</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-simple</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.seleniumhq.selenium.client-drivers</groupId>
			<artifactId>selenium-java-client-driver</artifactId>
			<version>1.0.2</version>
			<scope>test</scope>
		</dependency>
		<!-- embedded LDAP server for tests (used by spring security) -->
		<dependency>
			<groupId>org.apache.directory.server</groupId>
			<artifactId>apacheds-server-jndi</artifactId>
			<version>${apache-directory-server.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-release-version}</version>
			<scope>test</scope>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.github.fakemongo</groupId>
			<artifactId>fongo</artifactId>
			<version>${fakemongo.version}</version>
			<scope>test</scope>
		</dependency>
		<!-- Test dependencies - end -->

		<!-- timestamping bouncycastle last release : timestaping and ciphering-->
<!-- 		<dependency> -->
<!-- 			<groupId>org.bouncycastle</groupId> -->
<!-- 			<artifactId>bctsp-jdk16</artifactId> -->
<!-- 			<version>1.46</version> -->
<!-- 		</dependency> -->
<!-- 		<dependency> -->
<!-- 			<groupId>org.bouncycastle</groupId> -->
<!-- 			<artifactId>bcprov-jdk16</artifactId> -->
<!-- 			<version>1.46</version> -->
<!-- 		</dependency> -->

		<!-- Database related dependencies - begin -->
		<dependency>
			<groupId>org.postgresql</groupId>
			<artifactId>postgresql</artifactId>
			<version>${sql.driver.postgresql}</version>
		</dependency>
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
			<version>${sql.driver.mysql}</version>
		</dependency>
		<!--  db connection pool -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.2</version>
		</dependency>
		<dependency>
			<groupId>javax.xml.ws</groupId>
			<artifactId>jaxws-api</artifactId>
			<version>2.3.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbcp</groupId>
			<artifactId>commons-dbcp</artifactId>
			<version>1.4</version>
		</dependency>
		<dependency>
			<groupId>commons-pool</groupId>
			<artifactId>commons-pool</artifactId>
			<version>1.6</version>
		</dependency>
		<!-- Database related dependencies - begin -->

		<!-- XSS filter -->
		<!-- https://mvnrepository.com/artifact/com.googlecode.owasp-java-html-sanitizer/owasp-java-html-sanitizer -->
		<dependency>
			<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
			<artifactId>owasp-java-html-sanitizer</artifactId>
			<version>20181114.1</version>
		</dependency>

		<dependency>
			<groupId>commons-httpclient</groupId>
			<artifactId>commons-httpclient</artifactId>
			<version>3.1</version>
		</dependency>

		<!-- ###### web services ####### -->
		<!-- cxf rest jaxrs -->
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<version>2.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<!-- cxf -->
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-transports-http</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-rs-client</artifactId>
			<version>${cxf.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-base</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-core</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<!-- Google Guava -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>
		<!-- Swagger : webservice documentation -->
		<dependency>
			<groupId>com.wordnik</groupId>
			<artifactId>swagger-jaxrs_2.10</artifactId>
			<version>1.3.13</version>
			<exclusions>
				<exclusion>
					<groupId>javax.ws.rs</groupId>
					<artifactId>jsr311-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- include jmx term inside war for easy distribution -->
		<dependency>
			<groupId>org.cyclopsgroup</groupId>
			<artifactId>jmxterm</artifactId>
			<version>1.0.0</version>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf</artifactId>
			<version>${thymeleaf.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.mvc.version}</version>
		</dependency>
		<dependency>
			<groupId>org.thymeleaf</groupId>
			<artifactId>thymeleaf-spring4</artifactId>
			<version>${thymeleaf.version}</version>
		</dependency>
		<!-- https://mvnrepository.com/artifact/com.fasterxml.jackson.core/jackson-databind -->
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>io.jsonwebtoken</groupId>
			<artifactId>jjwt</artifactId>
			<version>${jjwt.version}</version>
		</dependency>
	</dependencies>
	<build>
		<finalName>linshare-core</finalName>
			<plugins>
			<!-- maven-compiler-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.3</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
					<optimize>true</optimize>
				</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.8</version>
					<executions>
						<execution>
							<id>ant-merge-files</id>
							<goals>
								<goal>run</goal>
							</goals>
							<phase>prepare-package</phase>
							<configuration>
								<target>
									<mkdir dir="target/generated-sources" />
									<concat destfile="target/generated-sources/import-postgresql.sql">
										<fileset file="src/main/resources/sql/common/import-header.sql" />
										<fileset file="src/main/resources/sql/common/import-domains.sql" />
										<fileset file="src/main/resources/sql/common/import-quota.sql" />
										<fileset file="src/main/resources/sql/common/import-welcome-messages.sql" />
										<fileset file="src/main/resources/sql/common/import-functionalities.sql" />
										<fileset file="src/main/resources/sql/common/import-mail-activation.sql" />
										<fileset file="src/main/resources/sql/common/import_mail_structure.sql" />
										<fileset file="src/main/resources/sql/common/mail_updates/mail_layout/*.sql" />
										<fileset file="src/main/resources/sql/common/mail_updates/mail_content/*.sql" />
										<fileset file="src/main/resources/sql/common/mail_updates/mail_footer/*.sql" />
										<fileset file="src/main/resources/sql/common/import-settings.sql" />
										<fileset file="src/main/resources/sql/common/import-alias.sql" />
									</concat>
								</target>
							</configuration>
						</execution>
					</executions>
				</plugin>
			<!-- buildnumber-maven-plugin (compute timestamp, build number, ...)-->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.4</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<!--  It will first check to see if you have locally modified files, and will fail if there are any.  -->
					<!-- -Dmaven.buildNumber.doCheck=true -->
					<doCheck>false</doCheck>
					<!-- Update your local repository -->
					<!-- -Dmaven.buildNumber.doUpdate=true -->
					<doUpdate>false</doUpdate>
					<buildNumberPropertyName>sources.version</buildNumberPropertyName>
					<timestampPropertyName>build.timestamp</timestampPropertyName>
					<timestampFormat>{0,date,yyyy-MM-dd HH:mm}</timestampFormat>
				</configuration>
			</plugin>

			<!-- maven-war-plugin (packaging) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
						</manifest>
						<manifestEntries>
							<Implementation-Build>${sources.version} ${build.timestamp}</Implementation-Build>
						</manifestEntries>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>default-war</id>
						<phase>package</phase>
						<goals>
							<goal>war</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- maven-assembly-plugin for sql files -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.1.0</version>
				<configuration>
					<appendAssemblyId>true</appendAssemblyId>
				</configuration>
				<executions>
					<execution>
						<id>sql</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assembly/sql.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- maven-scm-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-scm-plugin</artifactId>
				<version>1.9.4</version>
			</plugin>
			<!-- maven-release-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-release-plugin</artifactId>
				<version>2.5.3</version>
				<configuration>
					<tagNameFormat>@{project.version}</tagNameFormat>
					<!--During release:perform, enable the "release" profile -->
					<!-- <releaseProfiles>release</releaseProfiles> -->
				</configuration>
			</plugin>
			<!-- maven-install-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- maven-deploy-plugin -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<version>2.8.2</version>
				<configuration>
                    <skip>false</skip>
				</configuration>
			</plugin>
			<!-- Maven Jetty Plugin 9.x : run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.eclipse.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>9.4.8.v20171121</version>
				<configuration>
					<scanIntervalSeconds>10</scanIntervalSeconds>
					<webApp>
						<contextPath>/linshare</contextPath>
					</webApp>
					<!-- -Djetty.port=8080 -->
					<httpConnector>
						<port>8080</port>
					</httpConnector>
				</configuration>
				<!--  not supported yet
				<requestLog implementation="org.mortbay.jetty.NCSARequestLog">
					This doesn't do anything for Jetty, but is a workaround for a Maven
						bug that prevents the requestLog from being set.
					<append>true</append>
				</requestLog>
				-->
			</plugin>
			<!-- cobertura (test coverage) -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.7</version>
				<configuration>
					<instrumentation>
						<ignores>
							<ignore>org.linagora.*Test*</ignore>
						</ignores>
						<excludes>
							<exclude>**/*Test.class</exclude>
						</excludes>
					</instrumentation>
				</configuration>
			</plugin>
			<!-- maven-surefire-plugin (test reports) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.22.0</version>
				<configuration>
					<useSystemClassLoader>false</useSystemClassLoader>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<failOnError>false</failOnError>
				</configuration>
			</plugin>
			<!-- build-helper-maven-plugin : add embedded ldap directory sources to 
				test path -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.9.1</version>
				<executions>
					<execution>
						<id>add-test-source</id>
						<phase>generate-test-sources</phase>
						<inherited>false</inherited>
						<goals>
							<goal>add-test-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${project.basedir}/src/test/generated/cxf</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- hibernate tool : ?? -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>hibernate3-maven-plugin</artifactId>
				<version>2.2</version>
				<configuration>
					<components>
						<component>
							<name>hbm2ddl</name>
							<!--implementation>jdbcconfiguration</implementation -->
						</component>
					</components>
					<componentProperties>
						<drop>false</drop>
						<update>false</update>
						<export>false</export>
						<format>true</format>
						<configurationfile>src/main/resources/hibernate.cfg.xml</configurationfile>
						<propertyfile>src/main/resources/reference-database.properties</propertyfile>
						<outputfilename>createSchema.sql</outputfilename>
					</componentProperties>
				</configuration>
			</plugin>
		</plugins>
		<resources>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<excludes>
					<exclude>version.properties</exclude>
				</excludes>
			</resource>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>version.properties</include>
				</includes>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
			</testResource>
			<testResource>
				<directory>src/apacheds/resources</directory>
			</testResource>
			<testResource>
				<directory>src/fongo/resources</directory>
			</testResource>
		</testResources>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings only. It has no influence on the Maven build itself.-->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.zcore.maven
										</groupId>
										<artifactId>
											merge-maven-plugin
										</artifactId>
										<versionRange>
											[0.0.3,)
										</versionRange>
										<goals>
											<goal>merge</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<ignore />
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<pluginRepositories>
		<pluginRepository>
			<id>bintray-central</id>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<name>bintray-plugins</name>
			<url>http://dl.bintray.com/kongchen/maven</url>
		</pluginRepository>
	</pluginRepositories>

	<reporting>
		<!-- Adds a report detailing the components, mixins and base classes defined by this module. -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.0.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.10.4</version>
			</plugin>
			<!-- it does not seem to work <plugin> <groupId>org.apache.tapestry</groupId> <artifactId>tapestry-component-report</artifactId>
				<version>${tapestry-release-version}</version> <configuration> <rootPackage>org.linagora.linshare.view.tapestry</rootPackage> </configuration>
				</plugin> -->
		</plugins>
	</reporting>
	<profiles>
		<!--  profile:id=default -->
		<profile>
			<id>default</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<!--  profile:id=dev -->
		<profile>
			<id>dev</id>
			<build>
				<finalName>linshare-core-${project.version}-${maven.build.timestamp}-${sources.version}</finalName>
			</build>
			<properties>
				<project.version>${project.version}-${maven.build.timestamp}-${sources.version}</project.version>
			</properties>
		</profile>

		<profile>
			<id>documentation</id>
			<activation>
				<property>
					<name>target</name>
					<value>release</value>
				</property>
			</activation>
			<build>
			  <plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<executions>
							<execution>
								<id>documentation-ws-api-delegation</id>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<apiSources>
										<apiSource>
											<locations>org.linagora.linshare.webservice.delegation</locations>
											<apiVersion>v1</apiVersion>
											<basePath>http://localhost:8080/linshare/webservice/rest/delegation</basePath>
											<outputTemplate>${basedir}/src/docs/resources/delegation/strapdown.html.mustache</outputTemplate>
											<outputPath>${project.build.directory}/generated-documentation-ws-api-delegation/index.html</outputPath>
											<swaggerDirectory>${project.build.directory}/generated-documentation-ws-api-delegation/apidocs</swaggerDirectory>
											<mustacheFileRoot>${basedir}/src/docs/resources/delegation/mustache/</mustacheFileRoot>
										</apiSource>
									</apiSources>
								</configuration>
							</execution>
							<execution>
								<id>documentation-ws-api-userv1</id>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<apiSources>
										<apiSource>
											<locations>org.linagora.linshare.webservice.userv1</locations>
											<apiVersion>v1</apiVersion>
											<basePath>http://localhost:8080/linshare/webservice/rest/user</basePath>
											<outputTemplate>${basedir}/src/docs/resources/userv2/strapdown.html.mustache</outputTemplate>
											<outputPath>${project.build.directory}/generated-documentation-ws-api-userv1/index.html</outputPath>
											<swaggerDirectory>${project.build.directory}/generated-documentation-ws-api-userv1/apidocs</swaggerDirectory>
											<mustacheFileRoot>${basedir}/src/docs/resources/userv2/mustache/</mustacheFileRoot>
										</apiSource>
									</apiSources>
								</configuration>
							</execution>
							<execution>
								<id>documentation-ws-api-userv2</id>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
								<configuration>
									<apiSources>
										<apiSource>
											<locations>org.linagora.linshare.webservice.userv2</locations>
											<apiVersion>v2</apiVersion>
											<basePath>http://localhost:8080/linshare/webservice/rest/user/v2</basePath>
											<outputTemplate>${basedir}/src/docs/resources/userv2/strapdown.html.mustache</outputTemplate>
											<outputPath>${project.build.directory}/generated-documentation-ws-api-userv2/index.html</outputPath>
											<swaggerDirectory>${project.build.directory}/generated-documentation-ws-api-userv2/apidocs</swaggerDirectory>
											<mustacheFileRoot>${basedir}/src/docs/resources/userv2/mustache/</mustacheFileRoot>
										</apiSource>
									</apiSources>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- maven-assembly-plugin -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
						</configuration>
						<executions>
							<execution>
								<id>documentation-ws-api-delegation</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/swagger-delegation.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
							<execution>
								<id>documentation-ws-api-userv2</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/swagger-userv2.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
							<execution>
								<id>documentation-ws-api-userv1</id>
								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
								<configuration>
									<descriptors>
										<descriptor>src/assembly/swagger-userv1.xml</descriptor>
									</descriptors>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!--  profile:id=load-integration-context -->
		<profile>
			<id>load-integration-context</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.7</version>
						<executions>
							<execution>
								<phase>compile</phase>
								<configuration>
									<target name="copySql">
										<copy file="${basedir}/src/test/resources/DISABLED-springContext-datasource-integration.xml" tofile="${project.build.outputDirectory}/springContext-datasource.xml" overwrite="true" />
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=swagger-->
		<profile>
			<id>swagger</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.linagora.linshare.core.facade.webservice.common.dto;org.linagora.linshare.webservice</locations>
									<apiVersion>v1</apiVersion>
									<basePath>http://localhost:8080/linshare/webservice</basePath>
									<outputTemplate>
											${basedir}/src/docs/resources/strapdown.html.mustache
									</outputTemplate>
									<outputPath>generated/index.html</outputPath>
									<swaggerDirectory>generated/apidocs</swaggerDirectory>
									<mustacheFileRoot>${basedir}/src/docs/resources/mustache/</mustacheFileRoot>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=swagger-delegation -->
		<profile>
			<id>swagger-delegation</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.linagora.linshare.webservice.delegation</locations>
									<apiVersion>v1</apiVersion>
									<basePath>http://localhost:8080/linshare/webservice/rest/delegation</basePath>
									<outputTemplate>${basedir}/src/docs/resources/delegation/strapdown.html.mustache</outputTemplate>
									<outputPath>${project.build.directory}/generated-delegation/index.html</outputPath>
									<swaggerDirectory>${project.build.directory}/generated-delegation/apidocs</swaggerDirectory>
									<mustacheFileRoot>${basedir}/src/docs/resources/delegation/mustache/</mustacheFileRoot>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- maven-assembly-plugin -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.6</version>
						<configuration>
							<appendAssemblyId>true</appendAssemblyId>
							<descriptors>
								<descriptor>src/assembly/swagger-delegation.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>documentation-ws-api-delegation</id>
     								<phase>package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=swagger-delegation2 -->
		<profile>
			<id>swagger-delegation2</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.linagora.linshare.webservice.delegation</locations>
									<apiVersion>v1</apiVersion>
									<basePath>http://localhost:8080/linshare/webservice/rest/delegation</basePath>
									<outputTemplate>${basedir}/src/docs/resources/delegation/html.mustache</outputTemplate>
									<outputPath>generated-delegation2/index.html</outputPath>
									<swaggerDirectory>generated-delegation2/apidocs</swaggerDirectory>
									<mustacheFileRoot>${basedir}/src/docs/resources/delegation/mustache/</mustacheFileRoot>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=swagger-userv2 -->
		<profile>
			<id>swagger-userv2</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.linagora.linshare.webservice.userv2</locations>
									<apiVersion>v2</apiVersion>
									<basePath>http://localhost:8080/linshare/webservice/rest/user/v2</basePath>
									<outputTemplate>${basedir}/src/docs/resources/userv2/strapdown.html.mustache</outputTemplate>
									<outputPath>generated-userv2/index.html</outputPath>
									<swaggerDirectory>generated-userv2/apidocs</swaggerDirectory>
									<mustacheFileRoot>${basedir}/src/docs/resources/userv2/mustache/</mustacheFileRoot>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=swagger-userv2-strapdown -->
		<profile>
			<id>swagger-userv2-strapdown</id>
			<build>
				<plugins>
					<plugin>
						<groupId>com.github.kongchen</groupId>
						<artifactId>swagger-maven-plugin</artifactId>
						<version>2.2</version>
						<configuration>
							<apiSources>
								<apiSource>
									<locations>org.linagora.linshare.webservice.userv2</locations>
									<apiVersion>v2</apiVersion>
									<basePath>http://localhost:8080/linshare/webservice/rest/user/v2</basePath>
									<outputTemplate>${basedir}/src/docs/resources/userv2/html.mustache</outputTemplate>
									<outputPath>generated-userv2-strapdown/index.html</outputPath>
									<swaggerDirectory>generated-userv2-strapdown/apidocs</swaggerDirectory>
									<mustacheFileRoot>${basedir}/src/docs/resources/userv2/mustache/</mustacheFileRoot>
								</apiSource>
							</apiSources>
						</configuration>
						<executions>
							<execution>
								<phase>compile</phase>
								<goals>
									<goal>generate</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--  profile:id=apacheds -->
		<profile>
			<id>apacheds</id>
			<activation>
				<property>
					<name>target</name>
					<value>distribution</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/apacheds/resources</directory>
					</resource>
				</resources>
			</build>
			<dependencies>
				<!-- embedded LDAP server for tests (used by spring security) -->
				<dependency>
					<groupId>org.apache.directory.server</groupId>
					<artifactId>apacheds-server-jndi</artifactId>
					<version>${apache-directory-server.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=fongo -->
		<profile>
			<id>fongo</id>
			<activation>
				<property>
					<name>target</name>
					<value>distribution</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/fongo/resources</directory>
					</resource>
				</resources>
			</build>
			<dependencies>
				<dependency>
					<groupId>com.github.fakemongo</groupId>
					<artifactId>fongo</artifactId>
					<version>${fakemongo.version}</version>
				</dependency>
				<dependency>
					<groupId>org.springframework.data</groupId>
					<artifactId>spring-data-mongodb</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=h2 -->
		<profile>
			<id>h2</id>
			<activation>
				<property>
					<name>target</name>
					<value>distribution</value>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${h2.version}</version>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=local -->
		<profile>
			<id>local</id>
			<activation>
				<property>
					<name>target</name>
					<value>local</value>
				</property>
			</activation>
			<build>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
					</resource>
					<resource>
						<directory>src/subethamail/resources</directory>
					</resource>
					<resource>
						<directory>src/apacheds/resources</directory>
					</resource>
				</resources>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>build-helper-maven-plugin</artifactId>
						<version>1.8</version>
						<executions>
							<execution>
								<id>add-source</id>
								<phase>generate-sources</phase>
								<inherited>false</inherited>
								<goals>
									<goal>add-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>src/subethamail/java</source>
									</sources>
								</configuration>
							</execution>
							<execution>
								<id>add-test-source</id>
								<phase>generate-test-sources</phase>
								<inherited>false</inherited>
								<goals>
									<goal>add-test-source</goal>
								</goals>
								<configuration>
									<sources>
										<source>${project.basedir}/src/test/generated/cxf</source>
									</sources>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<dependencies>
				<!-- embedded LDAP server for tests (used by spring security) -->
				<dependency>
					<groupId>org.apache.directory.server</groupId>
					<artifactId>apacheds-server-jndi</artifactId>
					<version>${apache-directory-server.version}</version>
				</dependency>
				<dependency>
					<groupId>org.subethamail</groupId>
					<artifactId>subethasmtp</artifactId>
					<version>3.1.7</version>
					<exclusions>
						<exclusion>
							<groupId>org.slf4j</groupId>
							<artifactId>slf4j-simple</artifactId>
						</exclusion>
					</exclusions>
				</dependency>
			</dependencies>
		</profile>
		<!--  profile:id=distribution -->
		<profile>
			<id>distribution</id>
			<activation>
				<property>
					<name>target</name>
					<value>distribution</value>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>prepare-jetty</id>
								<phase>package</phase>
								<configuration>
									<tasks>
										<property name="execution.path" refid="maven.runtime.classpath" />
										<ant antfile="${basedir}/misc/build.xml" target="prepare-jetty" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>clean-jetty</id>
								<phase>clean</phase>
								<configuration>
									<tasks>
										<property name="execution.path" refid="maven.runtime.classpath" />
										<ant antfile="${basedir}/misc/build.xml" target="clean" />
									</tasks>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/dist.xml</descriptor>
								<descriptor>src/main/assembly/src.xml</descriptor>
							</descriptors>
							<!-- Required since default value is true (Maven 2.2-beta-3) -->
							<ignoreDirFormatExtensions>true</ignoreDirFormatExtensions>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<goals>
									<goal>directory-single</goal>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.codehaus.izpack</groupId>
						<artifactId>izpack-maven-plugin</artifactId>
						<version>1.0-alpha-5</version>
						<configuration>
							<descriptor>${basedir}/src/install/install.xml</descriptor>
							<descriptorEncoding>UTF-8</descriptorEncoding>
							<fileExtension>jar</fileExtension>
							<installerFile>${project.build.directory}/${project.artifactId}</installerFile>
							<izpackBasedir>${project.build.directory}/${project.artifactId}-dist/${project.artifactId}-${project.version}</izpackBasedir>
						</configuration>

						<executions>
							<execution>
								<id>standard-installer</id>
								<phase>package</phase>
								<goals>
									<goal>izpack</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>org.codehaus.izpack</groupId>
								<artifactId>izpack-standalone-compiler</artifactId>
								<version>4.3.2</version>
							</dependency>
						</dependencies>

					</plugin>
				</plugins>
			</build>

		</profile>
	</profiles>

	<repositories>
		<repository>
			<id>Linagora-LinShare-Repositories</id>
			<url>https://nexus.linagora.com/content/groups/linshare</url>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</snapshots>
			<releases>
				<enabled>true</enabled>
				<updatePolicy>daily</updatePolicy>
			</releases>
		</repository>
	</repositories>

	<distributionManagement>
		<repository>
			<id>Linagora-LinShare-Releases</id>
			<name>Linagora LinShare Releases</name>
			<url>https://nexus.linagora.com/content/repositories/linshare-releases</url>
		</repository>
		<snapshotRepository>
			<id>Linagora-LinShare-Snapshots</id>
			<name>Linagora LinShare Snapshots</name>
			<url>https://nexus.linagora.com/content/repositories/linshare-snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<properties>
		<apache-directory-server.version>1.5.5</apache-directory-server.version>
		<cxf.version>3.2.4</cxf.version>
		<fakemongo.version>2.2.0-RC2</fakemongo.version>
		<guava.version>27.0-jre</guava.version>
		<h2.version>1.4.196</h2.version>
		<hibernate.version>5.3.7.Final</hibernate.version>
		<jackson.version>2.9.8</jackson.version>
		<jclouds.version>2.1.3</jclouds.version>
		<jjwt.version>0.9.0</jjwt.version>
		<linid.authorization.version>2.1.2</linid.authorization.version>
		<maven.build.timestamp.format>yyyy.MM.dd-HH.mm.ss</maven.build.timestamp.format>
		<mozilla.rhino.version>1.7.12</mozilla.rhino.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<servlet.context.version>3.0.1</servlet.context.version>
		<slf4j-release-version>1.7.25</slf4j-release-version>
		<spring-data.version>Kay-SR12</spring-data.version>
		<spring.mvc.version>5.0.7.RELEASE</spring.mvc.version>
		<spring-release-version>5.1.2.RELEASE</spring-release-version>
		<spring-security-release-version>5.1.2.RELEASE</spring-security-release-version>
		<sql.driver.mysql>8.0.11</sql.driver.mysql>
		<sql.driver.postgresql>42.2.8</sql.driver.postgresql>
		<thymeleaf.version>3.0.9.RELEASE</thymeleaf.version>
	</properties>
</project>
