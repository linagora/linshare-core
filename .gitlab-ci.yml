---

#
# Build stages:
# - 'prepare': Execute some verification as system requirements before to launch the build
# - 'build': Execute the build: compile, execute unit tests
# - 'code_analysis': Execute an automatic review of source code
# - 'test': Execute all kind of tests requiring the deployment of Linshare Core. Example: integration tests, API tests, ...
stages:
  - prepare
  - build
  - code_analysis
  - test

variables:
  DOCKER_IMAGE_CORE_EMBEDDED: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-embedded-for-tests"
  DOCKER_IMAGE_CORE_TEST: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-test"
  GIT_DEPTH: "1"
  FF_NETWORK_PER_BUILD: "true"
  SNYK_IMAGE: snyk/snyk-cli:maven-3.6.3_java11
  SNYK_URL: "https://app.snyk.io/org/linshare/projects"
  SNYK_OPENSOURCE: "yes"
  SNYK_CODE: "yes"

.cache-tpl: &cache-tpl
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - $CI_PROJECT_DIR/.m2/repository
  policy: pull

.curl-tpl: &curl-tpl
  variables:
    GIT_STRATEGY: none
  tags:
    - curl

.build-docker-tpl: &build-docker-tpl
  image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
  tags:
    - docker
  
  services:
    - name: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
      alias: docker-dind

include:
  - project: 'publicgroup/templates/gitlab-ci-yml'
    ref: master
    file: 'ci-snyk.yml'

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: prepare
  retry: 2
  allow_failure: true
  tags:
    - ultralight
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - tags@linagora/lgs/linshare/products/linshare-core
      - /^release-.*/@linagora/lgs/linshare/products/linshare-core

build:
  <<: *build-docker-tpl
  stage: prepare
  tags:
    - docker
  variables:
    DOCKER_HOST: "tcp://docker-dind:2375"
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ""
  
  script:
    - echo "FROM maven:3.8.8-eclipse-temurin-17" > Dockerfile
    - echo "RUN useradd -ms /bin/bash maven" >> Dockerfile
    - echo "WORKDIR /home/maven/linshare" >> Dockerfile
    - echo "COPY src /home/maven/linshare/src" >> Dockerfile
    - echo "COPY pom.xml /home/maven/linshare/" >> Dockerfile
    - echo "RUN chown -R maven:maven /home/maven/linshare" >> Dockerfile
    - echo "RUN sed -i -e 's/log4j.category.org.linagora.linshare=info/log4j.category.org.linagora.linshare=debug/g' /home/maven/linshare/src/main/resources/log4j2.properties" >> Dockerfile
    - echo "USER maven" >> Dockerfile
    - echo "ENV LINSHARE_HOME=/home/maven/linshare" >> Dockerfile
    - echo "ENV MAVEN_CONFIG=/home/maven/.m2" >> Dockerfile
    - echo "RUN mvn dependency:go-offline dependency:resolve dependency:resolve-plugins --batch-mode" >> Dockerfile
    - echo "RUN mvn compile" >> Dockerfile
    - echo "RUN mvn jetty:start  -P h2,local,mongo-java-server > /dev/null" >> Dockerfile
    - echo "CMD mvn jetty:run -P h2,local,mongo-java-server -Dspring.profiles.active=default,jcloud,batches,tests" >> Dockerfile
    - echo "EXPOSE 8080" >> Dockerfile
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}" docker-registry.linagora.com:5000
    - docker login -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_RO_TOKEN}"
    - docker build . -t "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
    - docker push "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
    - docker logout docker-registry.linagora.com:5000

test-java:
  stage: build
  tags:
    - docker
  image: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  script:
    - mvn clean test
    
sonarqube_job:
  stage: code_analysis
  tags:
    - docker
  image: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  script:
    - mvn verify sonar:sonar -Dsonar.host.url=${SONAR_URL} -Dsonar.token=${SONAR_TOKEN}
  allow_failure: true
  only:
    refs:
      - master@linagora/lgs/linshare/products/linshare-core
      - /^development-.*/@linagora/lgs/linshare/products/linshare-core

test-api-branch-with-master:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:master"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  services:
    - name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
      alias: linshare
    - name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
      alias: ldap
  allow_failure: true
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  only:
    refs:
      - master@linagora/lgs/linshare/products/linshare-core
      - development-7.0.0@linagora/lgs/linshare/products/linshare-core
      - /^feature-master-.*/@linagora/lgs/linshare/products/linshare-core
      - /^feature-development-.*/@linagora/lgs/linshare/products/linshare-core


test-api-branch-maintenance-x:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:${CI_COMMIT_REF_SLUG}"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  # CI_DEBUG_TRACE: "true"
  services:
    - alias: ldap
      name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
    - alias: linshare
      name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - /tmp/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  only:
    refs:
      - /^maintenance-.*/@linagora/lgs/linshare/products/linshare-core

test-api-branch-with-same-name:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:${CI_COMMIT_REF_SLUG}"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  # CI_DEBUG_TRACE: "true"
  services:
    - alias: ldap
      name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
    - alias: linshare
      name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}" 
  allow_failure: true
  artifacts:
    when: always
    paths:
      - /tmp/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  except:
    refs:
      - master@linagora/lgs/linshare/products/linshare-core
      - development-7.0.0@linagora/lgs/linshare/products/linshare-core
      - /^maintenance-.*/@linagora/lgs/linshare/products/linshare-core
      - tags@linagora/lgs/linshare/products/linshare-core
