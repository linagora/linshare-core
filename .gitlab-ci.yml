stages:
  - prepare
  - build
  - test

variables:
    DOCKER_IMAGE_CORE_BASE: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-base-image"
    DOCKER_IMAGE_CORE_TEST: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-test"
    GIT_DEPTH: "1"

.cache-tpl: &cache-tpl
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - $CI_PROJECT_DIR/.m2/repository
  policy: pull

.curl-tpl: &curl-tpl
  variables:
    GIT_STRATEGY: none
  tags:
    - curl

.build-docker-tpl: &build-docker-tpl
  image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
  tags:
    - docker
  services:
      - name: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
        alias: docker-dind

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: prepare
  tags:
    - ultralight
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - tags@linagora/lgs/linshare/products/linshare-core
      - /^release-.*/@linagora/lgs/linshare/products/linshare-core

build:
  <<: *build-docker-tpl
  stage: prepare
  tags:
    - docker
  variables:
    DOCKER_HOST: "tcp://docker-dind"
  script:
    - echo "FROM maven:3.6-jdk-11" > Dockerfile
    - echo "RUN useradd -ms /bin/bash maven" >> Dockerfile
    - echo "WORKDIR /home/maven/linshare" >> Dockerfile
    - echo "COPY src /home/maven/linshare/src" >> Dockerfile
    - echo "COPY pom.xml /home/maven/linshare/" >> Dockerfile
    - echo "RUN chown -R maven:maven /home/maven/linshare" >> Dockerfile
    - echo "USER maven" >> Dockerfile
    - echo "ENV LINSHARE_HOME=/home/maven/linshare" >> Dockerfile
    - echo "ENV MAVEN_CONFIG=/home/maven/.m2" >> Dockerfile
    - echo "RUN mvn dependency:go-offline dependency:resolve dependency:resolve-plugins --batch-mode" >> Dockerfile
    - echo "RUN mvn compile" >> Dockerfile
    - echo "RUN mvn jetty:start  -P h2,local,mongo-java-server > /dev/null" >> Dockerfile
    - echo "CMD mvn jetty:run -P h2,local,mongo-java-server" >> Dockerfile
    - echo "EXPOSE 8080" >> Dockerfile
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}" docker-registry.linagora.com:5000
    - docker build . -t "${DOCKER_IMAGE_CORE_BASE}:${CI_COMMIT_REF_SLUG}"
    - docker push "${DOCKER_IMAGE_CORE_BASE}:${CI_COMMIT_REF_SLUG}"
    - docker logout docker-registry.linagora.com:5000

test:
  stage: test
  tags:
    - docker
  image: "${DOCKER_IMAGE_CORE_BASE}:${CI_COMMIT_REF_SLUG}"
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  script:
    - mvn clean test

test-api:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:${CI_COMMIT_REF_SLUG}"
  tags:
    - docker
  services:
    - name: "${DOCKER_IMAGE_CORE_BASE}:${CI_COMMIT_REF_SLUG}"
      alias: linshare
    - name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:1.2
      alias: ldap
  allow_failure: true
  script:
    - cd /tmp/
    - ./tests_linshare.py -v TestUserApiContactList
