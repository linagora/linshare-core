---
stages:
  - prepare
  - build
  - test

variables:
  DOCKER_IMAGE_CORE_EMBEDDED: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-embedded-for-tests"
  DOCKER_IMAGE_CORE_TEST: "docker-registry.linagora.com:5000/linshare-snapshots/linshare-core-test"
  GIT_DEPTH: "1"
  FF_NETWORK_PER_BUILD: "true"

.cache-tpl: &cache-tpl
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - $CI_PROJECT_DIR/.m2/repository
  policy: pull

.curl-tpl: &curl-tpl
  variables:
    GIT_STRATEGY: none
  tags:
    - curl

.build-docker-tpl: &build-docker-tpl
  image: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
  tags:
    - docker
  services:
    - name: docker-registry.linagora.com:5000/linshare-snapshots/linshare-dind:latest
      alias: docker-dind

.snyk: &snyk
  stage: test
  needs: []
  image:
    name: snyk/snyk-cli:maven-3.6.3_java11
    entrypoint: [""]
  tags:
    - docker
  before_script:
    - snyk --version
  allow_failure: true
  after_script:
    - |
      echo "=== Snyk Ignore Policy ==="
      echo "It is possible to ignore security issues but:"
      echo "- Must be via commit then will be public information"
      echo "- Must provide a technical reason"
      echo "- Must have a reasonable expiration date"
      echo "Documentation:"
      echo "- https://docs.snyk.io/features/snyk-cli/fix-vulnerabilities-from-the-cli/ignore-vulnerabilities-using-snyk-cli"
      echo "- https://docs.snyk.io/features/fixing-and-prioritizing-issues/policies/the-.snyk-file"

snyk_open_source:
  <<: *snyk
  script:
    - |
      echo "=== Snyk OpenSource Scan ==="
      echo "Find vulnerabilities in open source dependencies"
      echo "Read more: https://snyk.io/product/open-source-security-management/"
    - snyk test --all-projects --severity-threshold=high --fail-on=all

snyk_code:
  <<: *snyk
  script:
    # snyk code docs don't have --all-projects nor --fail-on but it "works"
    - |
      echo "=== Snyk Code Scan ==="
      echo "Static Application Security Testing (SAST)"
      echo "Read more: https://snyk.io/learn/application-security/static-application-security-testing/"
    - snyk code test --all-projects --severity-threshold=high --fail-on=all

check_author:
  image: docker-registry.linagora.com:5000/lgs-releases/gitlab-integrity-checks:latest
  stage: prepare
  tags:
    - ultralight
  script:
    - check_author.py check "$GITLAB_USER_EMAIL" "$GITLAB_USER_NAME" --no-accents
  except:
    refs:
      - tags@linagora/lgs/linshare/products/linshare-core
      - /^release-.*/@linagora/lgs/linshare/products/linshare-core

build:
  <<: *build-docker-tpl
  stage: prepare
  tags:
    - docker
  variables:
    DOCKER_HOST: "tcp://docker-dind:2376"
  script:
    - echo "FROM maven:3.6-jdk-11" > Dockerfile
    - echo "RUN useradd -ms /bin/bash maven" >> Dockerfile
    - echo "WORKDIR /home/maven/linshare" >> Dockerfile
    - echo "COPY src /home/maven/linshare/src" >> Dockerfile
    - echo "COPY pom.xml /home/maven/linshare/" >> Dockerfile
    - echo "RUN chown -R maven:maven /home/maven/linshare" >> Dockerfile
    - echo "RUN sed -i -e 's/log4j.category.org.linagora.linshare=info/log4j.category.org.linagora.linshare=debug/g' /home/maven/linshare/src/main/resources/log4j2.properties" >> Dockerfile
    - echo "USER maven" >> Dockerfile
    - echo "ENV LINSHARE_HOME=/home/maven/linshare" >> Dockerfile
    - echo "ENV MAVEN_CONFIG=/home/maven/.m2" >> Dockerfile
    - echo "RUN mvn dependency:go-offline dependency:resolve dependency:resolve-plugins --batch-mode" >> Dockerfile
    - echo "RUN mvn compile" >> Dockerfile
    - echo "RUN mvn jetty:start  -P h2,local,mongo-java-server > /dev/null" >> Dockerfile
    - echo "CMD mvn jetty:run -P h2,local,mongo-java-server -Dspring.profiles.active=default,jcloud,adminv5,tests" >> Dockerfile
    - echo "EXPOSE 8080" >> Dockerfile
    - docker login -u "${REGISTRY_USER}" -p "${REGISTRY_TOKEN}" docker-registry.linagora.com:5000
    - docker login -u "${HUB_DOCKER_USER}" -p "${HUB_DOCKER_RO_TOKEN}"
    - docker build . -t "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
    - docker push "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
    - docker logout docker-registry.linagora.com:5000

test-java:
  stage: test
  tags:
    - docker
  image: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  artifacts:
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
  script:
    - mvn clean test

test-api-branch-with-master:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:master"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  services:
    - name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
      alias: linshare
    - name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
      alias: ldap
  allow_failure: true
  artifacts:
    when: always
    paths:
      - $CI_PROJECT_DIR/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  only:
    refs:
      - master@linagora/lgs/linshare/products/linshare-core
      - /^feature-master-.*/@linagora/lgs/linshare/products/linshare-core

test-api-branch-maintenance-x:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:${CI_COMMIT_REF_SLUG}"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  # CI_DEBUG_TRACE: "true"
  services:
    - alias: ldap
      name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
    - alias: linshare
      name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - /tmp/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  only:
    refs:
      - /^maintenance-.*/@linagora/lgs/linshare/products/linshare-core

test-api-branch-with-same-name:
  stage: test
  image: "${DOCKER_IMAGE_CORE_TEST}:${CI_COMMIT_REF_SLUG}"
  tags:
    - docker
  variables:
    LS_TEST_DEBUG: 0
  # CI_DEBUG_TRACE: "true"
  services:
    - alias: ldap
      name: docker-registry.linagora.com:5000/linshare-releases/linshare-ldap-for-tests:2.0
    - alias: linshare
      name: "${DOCKER_IMAGE_CORE_EMBEDDED}:${CI_COMMIT_REF_SLUG}"
  allow_failure: true
  artifacts:
    when: always
    paths:
      - /tmp/report.xml
    reports:
      junit: $CI_PROJECT_DIR/report.xml
  script:
    - cd /tmp
    - tox
  except:
    refs:
      - master@linagora/lgs/linshare/products/linshare-core
      - /^maintenance-.*/@linagora/lgs/linshare/products/linshare-core
      - tags@linagora/lgs/linshare/products/linshare-core
